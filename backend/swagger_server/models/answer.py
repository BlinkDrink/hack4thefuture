# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Answer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, is_correct: bool = None, text: str = None, explanation: str = None):  # noqa: E501
        """Answer - a model defined in Swagger

        :param is_correct: The is_correct of this Answer.  # noqa: E501
        :type is_correct: bool
        :param text: The text of this Answer.  # noqa: E501
        :type text: str
        :param explanation: The explanation of this Answer.  # noqa: E501
        :type explanation: str
        """
        self.swagger_types = {
            'is_correct': bool,
            'text': str,
            'explanation': str
        }

        self.attribute_map = {
            'is_correct': 'isCorrect',
            'text': 'text',
            'explanation': 'explanation'
        }

        self._is_correct = is_correct
        self._text = text
        self._explanation = explanation

    @classmethod
    def from_dict(cls, dikt) -> 'Answer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Answer of this Answer.  # noqa: E501
        :rtype: Answer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_correct(self) -> bool:
        """Gets the is_correct of this Answer.


        :return: The is_correct of this Answer.
        :rtype: bool
        """
        return self._is_correct

    @is_correct.setter
    def is_correct(self, is_correct: bool):
        """Sets the is_correct of this Answer.


        :param is_correct: The is_correct of this Answer.
        :type is_correct: bool
        """

        self._is_correct = is_correct

    @property
    def text(self) -> str:
        """Gets the text of this Answer.


        :return: The text of this Answer.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this Answer.


        :param text: The text of this Answer.
        :type text: str
        """

        self._text = text

    @property
    def explanation(self) -> str:
        """Gets the explanation of this Answer.


        :return: The explanation of this Answer.
        :rtype: str
        """
        return self._explanation

    @explanation.setter
    def explanation(self, explanation: str):
        """Sets the explanation of this Answer.


        :param explanation: The explanation of this Answer.
        :type explanation: str
        """

        self._explanation = explanation
