# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.answer import Answer
from swagger_server import util


class Question(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, uuid: str=None, question_text: str=None, answers: List[Answer]=None):  # noqa: E501
        """Question - a model defined in Swagger

        :param uuid: The uuid of this Question.  # noqa: E501
        :type uuid: str
        :param question_text: The question_text of this Question.  # noqa: E501
        :type question_text: str
        :param answers: The answers of this Question.  # noqa: E501
        :type answers: List[Answer]
        """
        self.swagger_types = {
            'uuid': str,
            'question_text': str,
            'answers': List[Answer]
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'question_text': 'questionText',
            'answers': 'answers'
        }

        self._uuid = uuid
        self._question_text = question_text
        self._answers = answers

    @classmethod
    def from_dict(cls, dikt) -> 'Question':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Question of this Question.  # noqa: E501
        :rtype: Question
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> str:
        """Gets the uuid of this Question.


        :return: The uuid of this Question.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """Sets the uuid of this Question.


        :param uuid: The uuid of this Question.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def question_text(self) -> str:
        """Gets the question_text of this Question.


        :return: The question_text of this Question.
        :rtype: str
        """
        return self._question_text

    @question_text.setter
    def question_text(self, question_text: str):
        """Sets the question_text of this Question.


        :param question_text: The question_text of this Question.
        :type question_text: str
        """

        self._question_text = question_text

    @property
    def answers(self) -> List[Answer]:
        """Gets the answers of this Question.


        :return: The answers of this Question.
        :rtype: List[Answer]
        """
        return self._answers

    @answers.setter
    def answers(self, answers: List[Answer]):
        """Sets the answers of this Question.


        :param answers: The answers of this Question.
        :type answers: List[Answer]
        """

        self._answers = answers
